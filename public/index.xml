<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ByteBuilders Blog</title><link>https://blog.byte.builders/</link><description>Recent content on ByteBuilders Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 17 Nov 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.byte.builders/index.xml" rel="self" type="application/rss+xml"/><item><title>The case for AppBinding</title><link>https://blog.byte.builders/post/appbinding/</link><pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate><guid>https://blog.byte.builders/post/appbinding/</guid><description>Kubernetes has become the de-facto orchestrator for the cloud native world. Kubernetes upholds the philosophy that the core should be small and allow developers to write their own extensions. One way to introduce new resource types is using CustomResourceDefintions (CRD) (originally known as ThirdPartyResources). Using CRDs anyone can define a new resource type that behaves like standard Kubernetes resources. This allows anyone to write a controller for custom resources and capture operational knowledge in a software form.</description></item><item><title>Secure Kubernetes using eBPF and Open Policy Agent</title><link>https://blog.byte.builders/post/bpf-opa/</link><pubDate>Sun, 17 Nov 2019 00:00:00 +0000</pubDate><guid>https://blog.byte.builders/post/bpf-opa/</guid><description>Securing Kubernetes cluster is a multi-faceted task. Runtime security is one aspect of it. It ensures that the workloads deployed in the cluster doesn&amp;rsquo;t do any malicious behaviors. For runtime instrumentation, we wanted to use Extended Berkeley Packet Filter (eBPF), a core technology in the Linux kernel.
There are already many tools available in this space, but each project has its own custom components. We want to use a set of common set of tools and techniques for binding these different components.</description></item><item><title>Introducing Kubeform - Provision cloud resources using Kubernetes CRDs &amp; Terraform</title><link>https://blog.byte.builders/post/introducing-kubeform/</link><pubDate>Sun, 17 Nov 2019 00:00:00 +0000</pubDate><guid>https://blog.byte.builders/post/introducing-kubeform/</guid><description>Kubeform by AppsCode is a Kubernetes operator for Terraform. Kubeform provides Kubernetes CRDs for Terraform resources and modules so that you can manage any cloud infrastructure in a Kubernetes native way. You just write a CRD for a cloud infrastructure, apply it and Kubeform will create it for you! Kubeform currently supports 5 top cloud platforms. These are AWS, Google Cloud, Azure, Digitalocean and Linode.
The key features of Kubeform are:</description></item></channel></rss>