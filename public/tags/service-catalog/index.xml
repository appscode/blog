<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>service-catalog on ByteBuilders Blog</title>
    <link>https://blog.byte.builders/tags/service-catalog/</link>
    <description>Recent content in service-catalog on ByteBuilders Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 01 Jan 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.byte.builders/tags/service-catalog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Author page</title>
      <link>https://blog.byte.builders/author/01/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.byte.builders/author/01/</guid>
      <description></description>
    </item>
    
    <item>
      <title>The case for AppBinding</title>
      <link>https://blog.byte.builders/post/appbinding/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://blog.byte.builders/post/appbinding/</guid>
      <description>Kubernetes has become the de-facto orchestrator for the cloud native world. Kubernetes upholds the philosophy that the core should be small and allow developers to write their own extensions. One way to introduce new resource types is using CustomResourceDefintions (CRD) (originally known as ThirdPartyResources). Using CRDs anyone can define a new resource type that behaves like standard Kubernetes resources. This allows anyone to write a controller for custom resources and capture operational knowledge in a software form.</description>
    </item>
    
    <item>
      <title>The case for Test post</title>
      <link>https://blog.byte.builders/post/testpost/</link>
      <pubDate>Fri, 02 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>https://blog.byte.builders/post/testpost/</guid>
      <description>Kubernetes has become the de-facto orchestrator for the cloud native world. Kubernetes upholds the philosophy that the core should be small and allow developers to write their own extensions. One way to introduce new resource types is using CustomResourceDefintions (CRD) (originally known as ThirdPartyResources). Using CRDs anyone can define a new resource type that behaves like standard Kubernetes resources. This allows anyone to write a controller for custom resources and capture operational knowledge in a software form.</description>
    </item>
    
  </channel>
</rss>